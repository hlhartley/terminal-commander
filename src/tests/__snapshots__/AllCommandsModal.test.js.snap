// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AllCommandsModal should match the snapshot with all data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AllCommandsModal
    terminalCommands={
      Array [
        Object {
          "command": "reset",
          "description": "Reset terminal screen",
          "id": 1,
        },
        Object {
          "command": "clear",
          "description": "Clear screen",
          "id": 2,
        },
      ]
    }
    toggleModal={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="button-container"
        >
          <button
            onClick={[Function]}
          >
            x
          </button>
        </div>,
        <h2
          className="modal-title"
        >
          <i
            class="fas fa-hand-point-right"
          />
          All Commands:
        </h2>,
        <ul
          className="modal-list fa-ul"
        >
          <li>
            <i
              class="fa-li fas fa-angle-double-right"
            />
            <span
              className="skyblue"
            >
              Reset terminal screen
            </span>
             = 
            reset
          </li>
          <li>
            <i
              class="fa-li fas fa-angle-double-right"
            />
            <span
              className="skyblue"
            >
              Clear screen
            </span>
             = 
            clear
          </li>
        </ul>,
      ],
      "className": "commands-modal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            onClick={[Function]}
          >
            x
          </button>,
          "className": "button-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "x",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "x",
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              class="fas fa-hand-point-right"
            />,
            "All Commands:",
          ],
          "className": "modal-title",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "class": "fas fa-hand-point-right",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "All Commands:",
        ],
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <i
                class="fa-li fas fa-angle-double-right"
              />
              <span
                className="skyblue"
              >
                Reset terminal screen
              </span>
               = 
              reset
            </li>,
            <li>
              <i
                class="fa-li fas fa-angle-double-right"
              />
              <span
                className="skyblue"
              >
                Clear screen
              </span>
               = 
              clear
            </li>,
          ],
          "className": "modal-list fa-ul",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  class="fa-li fas fa-angle-double-right"
                />,
                <span
                  className="skyblue"
                >
                  Reset terminal screen
                </span>,
                " = ",
                "reset",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "class": "fa-li fas fa-angle-double-right",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reset terminal screen",
                  "className": "skyblue",
                },
                "ref": null,
                "rendered": "Reset terminal screen",
                "type": "span",
              },
              " = ",
              "reset",
            ],
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  class="fa-li fas fa-angle-double-right"
                />,
                <span
                  className="skyblue"
                >
                  Clear screen
                </span>,
                " = ",
                "clear",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "class": "fa-li fas fa-angle-double-right",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Clear screen",
                  "className": "skyblue",
                },
                "ref": null,
                "rendered": "Clear screen",
                "type": "span",
              },
              " = ",
              "clear",
            ],
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="button-container"
          >
            <button
              onClick={[Function]}
            >
              x
            </button>
          </div>,
          <h2
            className="modal-title"
          >
            <i
              class="fas fa-hand-point-right"
            />
            All Commands:
          </h2>,
          <ul
            className="modal-list fa-ul"
          >
            <li>
              <i
                class="fa-li fas fa-angle-double-right"
              />
              <span
                className="skyblue"
              >
                Reset terminal screen
              </span>
               = 
              reset
            </li>
            <li>
              <i
                class="fa-li fas fa-angle-double-right"
              />
              <span
                className="skyblue"
              >
                Clear screen
              </span>
               = 
              clear
            </li>
          </ul>,
        ],
        "className": "commands-modal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              onClick={[Function]}
            >
              x
            </button>,
            "className": "button-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "x",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "x",
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                class="fas fa-hand-point-right"
              />,
              "All Commands:",
            ],
            "className": "modal-title",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "class": "fas fa-hand-point-right",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            "All Commands:",
          ],
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <i
                  class="fa-li fas fa-angle-double-right"
                />
                <span
                  className="skyblue"
                >
                  Reset terminal screen
                </span>
                 = 
                reset
              </li>,
              <li>
                <i
                  class="fa-li fas fa-angle-double-right"
                />
                <span
                  className="skyblue"
                >
                  Clear screen
                </span>
                 = 
                clear
              </li>,
            ],
            "className": "modal-list fa-ul",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    class="fa-li fas fa-angle-double-right"
                  />,
                  <span
                    className="skyblue"
                  >
                    Reset terminal screen
                  </span>,
                  " = ",
                  "reset",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "class": "fa-li fas fa-angle-double-right",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reset terminal screen",
                    "className": "skyblue",
                  },
                  "ref": null,
                  "rendered": "Reset terminal screen",
                  "type": "span",
                },
                " = ",
                "reset",
              ],
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    class="fa-li fas fa-angle-double-right"
                  />,
                  <span
                    className="skyblue"
                  >
                    Clear screen
                  </span>,
                  " = ",
                  "clear",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "class": "fa-li fas fa-angle-double-right",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Clear screen",
                    "className": "skyblue",
                  },
                  "ref": null,
                  "rendered": "Clear screen",
                  "type": "span",
                },
                " = ",
                "clear",
              ],
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
