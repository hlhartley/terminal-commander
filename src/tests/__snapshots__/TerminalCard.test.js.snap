// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TerminalCard should match the snapshot with all data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TerminalCard
    score={0}
    terminalCommands={
      Array [
        Object {
          "command": "reset",
          "description": "Reset terminal screen",
          "id": 1,
        },
        Object {
          "command": "clear",
          "description": "Clear screen",
          "id": 2,
        },
      ]
    }
    updateScore={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="mission-text"
        >
          Mission: type in the correct commands to get your tank to the target star
        </p>,
        <p>
          Score: 
          <span
            className="score"
          >
            0
             / 30
          </span>
           complete
        </p>,
        <p>
          Enter command to "
          <span
            className="command-instructions"
          >
            Reset terminal screen
          </span>
          "
        </p>,
        <input
          className="command-input"
          id="commandInput"
          onChange={[Function]}
          placeholder="reset"
        />,
      ],
      "className": "terminal-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Mission: type in the correct commands to get your tank to the target star",
          "className": "mission-text",
        },
        "ref": null,
        "rendered": "Mission: type in the correct commands to get your tank to the target star",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Score: ",
            <span
              className="score"
            >
              0
               / 30
            </span>,
            " complete",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Score: ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                0,
                " / 30",
              ],
              "className": "score",
            },
            "ref": null,
            "rendered": Array [
              0,
              " / 30",
            ],
            "type": "span",
          },
          " complete",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Enter command to \\"",
            <span
              className="command-instructions"
            >
              Reset terminal screen
            </span>,
            "\\"",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Enter command to \\"",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Reset terminal screen",
              "className": "command-instructions",
            },
            "ref": null,
            "rendered": "Reset terminal screen",
            "type": "span",
          },
          "\\"",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "command-input",
          "id": "commandInput",
          "onChange": [Function],
          "placeholder": "reset",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="mission-text"
          >
            Mission: type in the correct commands to get your tank to the target star
          </p>,
          <p>
            Score: 
            <span
              className="score"
            >
              0
               / 30
            </span>
             complete
          </p>,
          <p>
            Enter command to "
            <span
              className="command-instructions"
            >
              Reset terminal screen
            </span>
            "
          </p>,
          <input
            className="command-input"
            id="commandInput"
            onChange={[Function]}
            placeholder="reset"
          />,
        ],
        "className": "terminal-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Mission: type in the correct commands to get your tank to the target star",
            "className": "mission-text",
          },
          "ref": null,
          "rendered": "Mission: type in the correct commands to get your tank to the target star",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Score: ",
              <span
                className="score"
              >
                0
                 / 30
              </span>,
              " complete",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Score: ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  0,
                  " / 30",
                ],
                "className": "score",
              },
              "ref": null,
              "rendered": Array [
                0,
                " / 30",
              ],
              "type": "span",
            },
            " complete",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Enter command to \\"",
              <span
                className="command-instructions"
              >
                Reset terminal screen
              </span>,
              "\\"",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Enter command to \\"",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Reset terminal screen",
                "className": "command-instructions",
              },
              "ref": null,
              "rendered": "Reset terminal screen",
              "type": "span",
            },
            "\\"",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "command-input",
            "id": "commandInput",
            "onChange": [Function],
            "placeholder": "reset",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
